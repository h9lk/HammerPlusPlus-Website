/*! For license information please see main.js.LICENSE.txt */
(()=>{var __webpack_modules__={"./src/js/main.js":()=>{eval('/**\n * Generates the navbar based on the current page.\n */\nfunction genNav() {\n\tconst nav = document.querySelector("#navbar");\n\tif (!nav) return;\n\n\tconst current = location.pathname.split("/").pop().replace(".html", "");\n\tconst pages = ["index", "features", "updates", "download", "credits"];\n\n\tpages.forEach(page => {\n\t\tconst link = document.createElement("a");\n\t\tlink.href = `${page}.html`;\n\t\tlink.innerText = page;\n\t\tlink.className = page === current ? "selected" : "";\n\n\t\tnav.appendChild(link)\n\t})\n}\n\n\n/**\n * Sets the listener to all the splitted images.\n */\nfunction setSplitImages() {\n\tconst splits = document.querySelectorAll(".img-split");\n\n\tsplits.forEach(split => {\n\t\tsplit.addEventListener("click", () => {\n\t\t\tif (split.classList.contains("active")) {\n\t\t\t\tsplit.classList.remove("active");\n\t\t\t\tsplit.classList.add("inactive");\n\t\t\t} else if (split.classList.contains("inactive")) {\n\t\t\t\tsplit.classList.remove("inactive");\n\t\t\t\tsplit.classList.add("active");\n\t\t\t} else\n\t\t\t\tsplit.classList.add("active");\n\t\t})\n\t})\n}\n\n\n/**\n * Applies the source to all video tags based on their src attribute. It\n * also adds certain attributes specified.\n * Basically, "<video src=\'...\'>" becomes "<video autoplay muted loop><source src=\'...\'></video>"\n * @param {string[]} attrs - The list of attributes to apply to the each video\n */\nfunction setVideos(attrs = ["autoplay", "loop", "muted"]) {\n\tconst videos = document.querySelectorAll("video");\n\n\tvideos.forEach(video => {\n\t\tattrs.forEach(attr => video.setAttribute(attr, "true"));\n\t\tconst source = document.createElement("source");\n\t\tsource.src = video.src;\n\t\tvideo.appendChild(source);\n\t\tvideo.removeAttribute("src");\n\n\t\t// we apply this to the parent because the text in the cell can take a lot of space\n\t\tvideo.parentElement.addEventListener("mouseover", () => video.play());\n\t\tvideo.parentElement.addEventListener("mouseout", () => video.pause());\n\t})\n}\n\n\n/**\n * Sets the listeners to all the patch notes.\n */\nfunction addPatches() {\n\tconst patches = Array.from(document.querySelectorAll(".patch"));\n\n\t// The first patch note will be be active by default\n\tpatches[0].classList.toggle("active");\n\n\tpatches.forEach(patch => {\n\t\tpatch.querySelector("h1").addEventListener("click", () => {\n\t\t\tpatches.forEach(p => {\n\t\t\t\tif (p === patch)\n\t\t\t\t\tp.classList.toggle("active");\n\t\t\t\telse\n\t\t\t\t\tp.classList.remove("active");\n\t\t\t})\n\t\t})\n\n\t\t// Use spaces instead of tabs for the notes\n\t\tconst pre = patch.querySelector("pre");\n\t\tpre.innerHTML = pre.innerHTML.replaceAll("\\t", "   ");\n\t})\n}\n\n//# sourceURL=webpack://HammerPlusPlus-Website/./src/js/main.js?')}},__webpack_exports__={};__webpack_modules__["./src/js/main.js"]()})();